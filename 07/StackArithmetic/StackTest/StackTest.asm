//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//Eq
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_EQ_12
D;JEQ
(SET_FALSE_RETURN_EQ_12)
@SP
A=M
M=0
@SP_PP_EQ_12
0;JMP
(SET_TRUE_RETURN_EQ_12)
@SP
A=M
M=-1
@SP_PP_EQ_12
0;JMP
(SP_PP_EQ_12)
@SP
M=M+1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//Eq
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_EQ_13
D;JEQ
(SET_FALSE_RETURN_EQ_13)
@SP
A=M
M=0
@SP_PP_EQ_13
0;JMP
(SET_TRUE_RETURN_EQ_13)
@SP
A=M
M=-1
@SP_PP_EQ_13
0;JMP
(SP_PP_EQ_13)
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//Eq
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_EQ_14
D;JEQ
(SET_FALSE_RETURN_EQ_14)
@SP
A=M
M=0
@SP_PP_EQ_14
0;JMP
(SET_TRUE_RETURN_EQ_14)
@SP
A=M
M=-1
@SP_PP_EQ_14
0;JMP
(SP_PP_EQ_14)
@SP
M=M+1
//push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//Lt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_LT_15
D;JLT
(SET_FALSE_RETURN_LT_15)
@SP
A=M
M=0
@SP_PP_LT_15
0;JMP
(SET_TRUE_RETURN_LT_15)
@SP
A=M
M=-1
@SP_PP_LT_15
0;JMP
(SP_PP_LT_15)
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
//Lt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_LT_16
D;JLT
(SET_FALSE_RETURN_LT_16)
@SP
A=M
M=0
@SP_PP_LT_16
0;JMP
(SET_TRUE_RETURN_LT_16)
@SP
A=M
M=-1
@SP_PP_LT_16
0;JMP
(SP_PP_LT_16)
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
//Lt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_LT_17
D;JLT
(SET_FALSE_RETURN_LT_17)
@SP
A=M
M=0
@SP_PP_LT_17
0;JMP
(SET_TRUE_RETURN_LT_17)
@SP
A=M
M=-1
@SP_PP_LT_17
0;JMP
(SP_PP_LT_17)
@SP
M=M+1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//Gt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_GT_18
D;JGT
(SET_FALSE_RETURN_GT_18)
@SP
A=M
M=0
@SP_PP_GT_18
0;JMP
(SET_TRUE_RETURN_GT_18)
@SP
A=M
M=-1
@SP_PP_GT_18
0;JMP
(SP_PP_GT_18)
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//Gt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_GT_19
D;JGT
(SET_FALSE_RETURN_GT_19)
@SP
A=M
M=0
@SP_PP_GT_19
0;JMP
(SET_TRUE_RETURN_GT_19)
@SP
A=M
M=-1
@SP_PP_GT_19
0;JMP
(SP_PP_GT_19)
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
//Gt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_GT_20
D;JGT
(SET_FALSE_RETURN_GT_20)
@SP
A=M
M=0
@SP_PP_GT_20
0;JMP
(SET_TRUE_RETURN_GT_20)
@SP
A=M
M=-1
@SP_PP_GT_20
0;JMP
(SP_PP_GT_20)
@SP
M=M+1
//push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
//Add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
M=M-1
A=M
M=D+M
@SP
M=M+1
//push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//Sub
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
@SP
M=M+1
//Neg
@SP
M=M-1
A=M
D=M
D=-D
M=D
@SP
M=M+1
//And
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//Not
@SP
M=M-1
A=M
D=M
D=!D
M=D
@SP
M=M+1
