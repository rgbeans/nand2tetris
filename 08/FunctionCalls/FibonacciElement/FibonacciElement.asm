@256
D=A
@SP
M=D
//Call from within SYS.INIT calling SYS.INIT 0
@RETURNADRESS_SYS.INIT.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@SYS.INIT
0;JMP
(RETURNADRESS_SYS.INIT.1)
//FunctionDef for MAIN.FIBONACCI
(MAIN.FIBONACCI)
//push Arg 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Lt
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
D=M
@SET_TRUE_RETURN_LT_1
D;JLT
(SET_FALSE_RETURN_LT_1)
@SP
A=M
M=0
@SP_PP_LT_1
0;JMP
(SET_TRUE_RETURN_LT_1)
@SP
A=M
M=-1
@SP_PP_LT_1
0;JMP
(SP_PP_LT_1)
@SP
M=M+1
//IfGoto IF_TRUE
@SP
M=M-1
A=M
D=M
@Main_IF_TRUE
D;JNE
//Goto IF_FALSE
@Main_IF_FALSE
0;JMP
//Label IF_TRUE
(Main_IF_TRUE)
//push Arg 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//return MAIN.FIBONACCI
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
M=M-D
D=M
A=D
D=M
@retAddr
M=D
//pop Arg 0
@0
D=A
@SP
M=M-1
A=M
D=M
@foo
M=D
@0
D=A
@ARG
A=D+M
D=A
@bar
M=D
@foo
D=M
@bar
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@LCL
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@ARG
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@THIS
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@THAT
M=D
// returning
@retAddr
A=M
0;JMP
//Label IF_FALSE
(Main_IF_FALSE)
//push Arg 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Sub
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
@SP
M=M+1
//Call from within MAIN.FIBONACCI calling MAIN.FIBONACCI 1
@RETURNADRESS_MAIN.FIBONACCI.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@MAIN.FIBONACCI
0;JMP
(RETURNADRESS_MAIN.FIBONACCI.2)
//push Arg 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Sub
@SP
A=M
A=A-1
D=M
D=-D
@SP
M=M-1
M=M-1
A=M
M=D+M
@SP
M=M+1
//Call from within MAIN.FIBONACCI calling MAIN.FIBONACCI 1
@RETURNADRESS_MAIN.FIBONACCI.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@MAIN.FIBONACCI
0;JMP
(RETURNADRESS_MAIN.FIBONACCI.3)
//Add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
M=M-1
A=M
M=D+M
@SP
M=M+1
//return MAIN.FIBONACCI
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
M=M-D
D=M
A=D
D=M
@retAddr
M=D
//pop Arg 0
@0
D=A
@SP
M=M-1
A=M
D=M
@foo
M=D
@0
D=A
@ARG
A=D+M
D=A
@bar
M=D
@foo
D=M
@bar
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@LCL
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@ARG
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@THIS
M=D
@endFrame
M=M+1
D=M
A=D
D=M
@THAT
M=D
// returning
@retAddr
A=M
0;JMP
//FunctionDef for SYS.INIT
(SYS.INIT)
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call from within SYS.INIT calling MAIN.FIBONACCI 1
@RETURNADRESS_SYS.INIT.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@MAIN.FIBONACCI
0;JMP
(RETURNADRESS_SYS.INIT.4)
//Label WHILE
(Sys_WHILE)
//Goto WHILE
@Sys_WHILE
0;JMP
